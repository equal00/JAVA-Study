package method;

public class Method1Ref {
    public static void main(String[] args) {
        // 계산1
        int sum1 = add(5, 10);
        System.out.println("결과1 출력: " + sum1);

        // 게산2
        int sum2 = add(15, 20);
        System.out.println("결과1 출력: " + sum2);

        add(100, 200);
    }

    //add 매서드
    public static int add(int a, int b) {
        System.out.println(a + " + " + b + " 연산수행");
        int sum = a + b;
        return sum;
    }
}

/*
매서드 : 함수의 한 종류
 - 함수를 정의하는 것과 같음
 - 단순히 무언가를 정의해두고 필요할 때 불러서 사용한다는 개념

매서드 선언
 - public static int add(int a, int b)
 - 메서드 이름, 반환 타입, 파라미터 목록을 포함

 public static
 - public: 다른 클래스에서 호출할 수 있는 메서드
 - static: 객체를 생서하지 않고 호출할 수 있는 정적 메서드
 int add(int a, int b)
 - int: 반환 타입 정의
 - add: 메서드에 이름 부여
 - (int a, int b): 메서드를 호출할 때 전달하는 입력 값 정의 (매개변수)

매서드 본문
 - 메서드가 수행하는 코드 블록
 - 메서드를 호출하면 메서드 본문이 순서대로 실행
 - 메서드의 실행 결과를 반환하려면 Return문 사용

메서드 호출
 - 메서드 이름에 입력 값을 전달
 - 메서드를 호출할 때, 메서드에 넘기는 값과 파라미터의 타입이 맞아야 함.
 - 물론 파라미터의 순서와 갯수도 맞아야 한다.

 인수: 넘기는 값 (Argument, 인자)
 매개변수: 메서드를 정의할 대 선언한 변수 (Parameter)
*/

/*
java
// 1: 메서드 호출
int sum1 = add(5,10);

// 2: 파라미터 변수 a=5, b=10이 전달되면서 메서드가 수행된다.
public static int add(int a=5, int b=10) {
    int sum = a + b;
    return sum;
}

// 3: 메서드가 수행된다.
public static int add(int a=5, int b=10) {
    int sum = a(5) + b(10);
    return sum;
}

// 4: return을 사용해서 메서드 실행의 결과인 sum을 반환한다.
//    sum에는 값 15가 들어있으므로 값 15가 반환된다.
public static int add(int a=5. int b=10) {
    int sum = 15;
    return sum(15);
}

// 5: 메서드 호출 결과로 메서드에서 반환한 값 15가 나온다. 이 값을 sum1에 대입
int sum1 = 5

메서드 호출이 끝나면, 메서드 안 내용이 모두 제거
 */
