package array;

public class EnhancedFor1 {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};

        // 일반 for문
        for (int i = 0; i <numbers.length; i++) {
            int number = numbers[i];
            System.out.println(number);
        }
        // 향상된 for문  for-each문 -> 실무에서 가장 많이 씀
        for (int number : numbers) {
            System.out.println(number);
        }

        // for-each문을 사용할 수 없는 경우, 증가하는 index 값 필요
        for (int i = 0; i < numbers.length; i++) {
            System.out.println("number" + i + "번의 결과는: " + numbers[i]);
        }
    }
}

// 향상된 for문, 각각의 요소를 탐색한다는 의미

/*
배열은 처음부터 끝가지 순서대로 읽어서 사용하는 경우가 많음
-> 개발자 입장에서 그냥 배열을 순서대로 처음부터 끝까지 탐색하고 싶은데 번거로움

향상된 for문은 인덱스를 사용하지 않고, 종료 조건을 주지 않아도 된다.
단순히 해당 배열을 처음부터 끝까지 탐색
for (int 반복할 때 마다 찾은 값을 저장할 변수 : 탐색할 배열 선택);
-> numbers의 끝에 도달하면 반환할 값이 없어 반복을 종료

*/
